concept: [FloatingText] with properties: [LIFESPAN, DISTANCE, timeLeft, key, stacks] and behaviors: [update(), kill(), destroy(), reset(float, float, String, int), show(float, float, String, int), show(float, float, int, String, int), push(FloatingText, int)]
concept: [Char] with properties: [TXT_HIT, TXT_KILL, TXT_DEFEAT, TXT_YOU_MISSED, TXT_SMB_MISSED, TXT_OUT_OF_PARALYSIS, pos, sprite, name, HT, HP, baseSpeed, paralysed, pacified, rooted, flying, invisible, viewDistance, buffs, POS, TAG_HP, TAG_HT, BUFFS, EMPTY] and behaviors: [act(), storeInBundle(Bundle), restoreFromBundle(Bundle), attack(Char), hit(Char, Char, boolean), attackSkill(Char), defenseSkill(Char), defenseVerb(), dr(), damageRoll(), attackProc(Char, int), defenseProc(Char, int), speed(), damage(int, Object), destroy(), die(Object), isAlive(), spend(float), buffs(), buffs(Class), buff(Class), add(Buff), remove(Buff), remove(Class), onRemove(), updateSpriteState(), stealth(), move(int), distance(Char), onMotionComplete(), onAttackComplete(), onOperateComplete(), resistances(), immunities()]
concept: [Swing] with properties: [TXT_WILD] and behaviors: [proc(Weapon, Char, Char, int), name(String)]
concept: [Roots] with behaviors: [attachTo(Char), detach(), icon(), toString()]
concept: [Layer] with properties: [DEFAULT, layers] and behaviors: [get(String), get(String, String), clear(String), clear(), clear()]
concept: [GLog] with properties: [TAG, POSITIVE, NEGATIVE, WARNING, HIGHLIGHT, update] and behaviors: [i(String, Object), p(String, Object), w(String, Object)]
concept: [Buff] with properties: [target] and behaviors: [attachTo(Char), detach(), act(), icon(), affect(Char, Class), affect(Char, Class, float), prolong(Char, Class, float), detach(Buff), detach(Char, Class)]
concept: [Combo] with properties: [TXT_COMBO, count] and behaviors: [icon(), toString(), hit(Char, int), act()]
concept: [Bundle] with properties: [CLASS_NAME, aliases, data] and behaviors: [isNull(), contains(String), getBoolean(String), getInt(String), getFloat(String), getString(String), getBundle(String), get(), get(String), getIntArray(String), getBooleanArray(String), getStringArray(String), getCollection(String), put(String, boolean), put(String, int), put(String, float), put(String, String), put(String, Bundle), put(String, Bundlable), put(String, int), put(String, boolean), put(String, String), put(String, Collection), read(InputStream), write(Bundle, OutputStream), addAlias(Class, String)]
concept: [Multiplicity] with properties: [TXT_MULTIPLICITY, PINK] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [MobTitle] with properties: [TXT_SLEEPNIG, TXT_HUNTING, TXT_WANDERING, TXT_FLEEING, TXT_PASSIVE, COLOR_BG, COLOR_LVL, BAR_HEIGHT, GAP, image, name, hpBg, hpLvl, buffs, hp] and behaviors: [desc(Mob), layout()]
concept: [Font] with properties: [text, font, vertices, quads, realLength, dirty, LATIN_UPPER, LATIN_FULL, texture, tracking, baseLine, autoUppercase, lineHeight] and behaviors: [destroy(), updateMatrix(), draw(), updateVertices(), measure(), baseLine(), font(), font(Font), text(), text(String), splitBy(GdxTexture, int, int, String), colorNotMatch(Pixmap, int, int, int), colorMarked(GdxTexture, int, String), colorMarked(GdxTexture, int, int, String), get(char)]
concept: [Bounce] with properties: [TXT_BOUNCE] and behaviors: [proc(Armor, Char, Char, int), name(String)]
concept: [Potential] with properties: [TXT_POTENTIAL, BLUE] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Health] with properties: [TXT_DESC, STEP, pos, POS] and behaviors: [activate(Char), desc(), desc(), attachTo(Char), act(), icon(), toString(), storeInBundle(Bundle), restoreFromBundle(Bundle)]
concept: [Item] with properties: [TXT_PACK_FULL, TXT_TO_STRING, TXT_TO_STRING_X, TXT_TO_STRING_LVL, TXT_TO_STRING_LVL_X, TIME_TO_THROW, TIME_TO_PICK_UP, TIME_TO_DROP, AC_DROP, AC_THROW, defaultAction, name, image, stackable, quantity, level, levelKnown, cursed, cursedKnown, unique, itemComparator, QUANTITY, LEVEL, LEVEL_KNOWN, CURSED, CURSED_KNOWN, QUICKSLOT, curUser, curItem, thrower] and behaviors: [actions(Hero), doPickUp(Hero), doDrop(Hero), doThrow(Hero), execute(Hero, String), execute(Hero), onThrow(int), collect(Bag), collect(), detach(Bag), detachAll(Bag), isSimilar(Item), upgrade(), upgrade(int), degrade(), degrade(int), visiblyUpgraded(), visiblyCursed(), isUpgradable(), isIdentified(), isEquipped(Hero), identify(), evoke(Hero), toString(), name(), trueName(), image(), glowing(), info(), desc(), quantity(), quantity(int), price(), virtual(Class), random(), status(), updateQuickslot(), storeInBundle(Bundle), restoreFromBundle(Bundle), cast(Hero, int)]
concept: [IronKey] with properties: [TXT_FROM_DEPTH, curDepthQunatity] and behaviors: [collect(Bag), detach(Bag), toString(), info()]
concept: [Instability] with properties: [TXT_UNSTABLE] and behaviors: [proc(Weapon, Char, Char, int), name(String)]
concept: [Highlighter] with properties: [width, height, blocker, chrome, TITLE_COLOR, HIGHLIGHTER, STRIPPER, text, mask] and behaviors: [resize(int, int), hide(), destroy(), onSignal(PDInputProcessor), onKeyDown(PDInputProcessor), onBackPressed(), onMenuPressed(), inverted(), isHighlighted()]
concept: [Charm] with behaviors: [attachTo(Char), detach(), icon(), toString(), durationFactor(Char)]
concept: [Piercing] with properties: [TXT_PIERCING] and behaviors: [proc(Weapon, Char, Char, int), name(String)]
concept: [Script] with properties: [all, curScript, curScriptClass] and behaviors: [use(Class), reset(), compile(String), unuse()]
concept: [Armor] with properties: [TXT_DESC, STEP, pos, level, POS, LEVEL] and behaviors: [activate(Char), desc(), desc(), attachTo(Char), act(), absorb(int), level(int), icon(), toString(), storeInBundle(Bundle), restoreFromBundle(Bundle)]
concept: [Glyph] with properties: [TXT_EQUIP_CURSED, TXT_UNEQUIP_CURSED, TXT_IDENTIFY, TXT_TO_STRING, TXT_INCOMPATIBLE, tier, STR, DR, hitsToKnow, glyph, GLYPH, glyphs, chances] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), actions(Hero), doEquip(Hero), doUnequip(Hero, boolean), isEquipped(Hero), upgrade(), upgrade(boolean), safeUpgrade(), degrade(), proc(Char, Char, int), toString(), name(), info(), random(), typicalSTR(), typicalDR(), price(), inscribe(Glyph), isInscribed(), glowing(), proc(Armor, Char, Char, int), name(), name(String), restoreFromBundle(Bundle), storeInBundle(Bundle), glowing(), checkOwner(Char), random()]
concept: [Seed] with properties: [TXT_DESC] and behaviors: [activate(Char), desc(), desc(), activate(Char), wither(), restoreFromBundle(Bundle), storeInBundle(Bundle), desc(), actions(Hero), onThrow(int), execute(Hero, String), couch(int), isUpgradable(), isIdentified(), price(), info(), activate(Char), desc(), desc(), activate(Char), desc(), desc(), activate(Char), desc(), desc(), activate(Char), desc(), desc(), act(), defenseSkill(Char), defenseVerb(), damage(int, Object), add(Buff), reset(), interact(), tell(String, Object), description(), reset(), storeInBundle(Bundle), restoreFromBundle(Bundle), spawn(PrisonLevel, Room), placeItem(), complete(), activate(Char), desc(), collect(Bag), desc()]
concept: [WndInfoItem] with properties: [TXT_CHEST, TXT_LOCKED_CHEST, TXT_CRYSTAL_CHEST, TXT_TOMB, TXT_SKELETON, TXT_WONT_KNOW, TXT_NEED_KEY, TXT_INSIDE, TXT_OWNER, TXT_REMAINS, GAP, WIDTH] and behaviors: [fillFields(int, ItemSprite, int, String, String)]
concept: [CharSprite] with properties: [DEFAULT, POSITIVE, NEGATIVE, WARNING, NEUTRAL, MOVE_INTERVAL, FLASH_INTERVAL, idle, run, attack, operate, zap, die, animCallback, motion, burning, levitation, iceBlock, halo, emo, flashTime, sleeping, ch] and behaviors: [link(Char), worldToCamera(int), place(int), showStatus(int, String, Object), idle(), move(int, int), interruptMotion(), attack(int), attack(int, Callback), operate(int), zap(int), turnTo(int, int), die(), emitter(), centerEmitter(), bottomEmitter(), burst(int, int), bloodBurstA(PointF, int), blood(), flash(), add(State), remove(State), update(), showSleep(), hideSleep(), showAlert(), hideAlert(), kill(), onComplete(Tweener), onComplete(Animation)]
concept: [Group] with properties: [members, length] and behaviors: [destroy(), update(), draw(), kill(), indexOf(Gizmo), add(Gizmo), addToBack(Gizmo), recycle(Class), erase(Gizmo), remove(Gizmo), replace(Gizmo, Gizmo), getFirstAvailable(Class), countLiving(), countDead(), random(), clear(), bringToFront(Gizmo), sendToBack(Gizmo)]
concept: [Enchantment] with properties: [TXT_IDENTIFY, TXT_INCOMPATIBLE, TXT_TO_STRING, STR, ACU, DLY, hitsToKnow, enchantment, ENCHANTMENT, enchants, chances] and behaviors: [proc(Char, Char, int), storeInBundle(Bundle), restoreFromBundle(Bundle), acuracyFactor(Hero), speedFactor(Hero), damageRoll(Hero), upgrade(boolean), toString(), name(), random(), enchant(Enchantment), isEnchanted(), glowing(), proc(Weapon, Char, Char, int), name(String), restoreFromBundle(Bundle), storeInBundle(Bundle), glowing(), random()]
concept: [Uniform] with properties: [location, buf] and behaviors: [location(), enable(), disable(), value(int), value1f(float), value2f(float, float), value4f(float, float, float, float), valueM3(float), valueM4(float)]
concept: [Weakness] with properties: [DURATION] and behaviors: [icon(), toString(), attachTo(Char), detach(), duration(Char)]
concept: [LineSplitter] with properties: [maxWidth, PARAGRAPH, WORD, spaceSize, mask, width, height, lineWidth, lineHeight, x, y, lines, curLine, curLineWidth, metrics] and behaviors: [updateVertices(), getWordMetrics(String, PointF), measure(), addSymbol(float, float), addSpace(float), newLine(float, float), newLine(String, float), append(String, float), split()]
concept: [Shrinking] with properties: [size, lifespan, left] and behaviors: [reset(float, float, int, float, float), update(), update()]
concept: [SparseArray] with behaviors: [keyArray(), valuesAsList()]
concept: [Displacement] with properties: [TXT_DISPLACEMENT, BLUE] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Entanglement] with properties: [TXT_ENTANGLEMENT, GREEN] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Hero] with properties: [TXT_LEAVE, TXT_LEVEL_UP, TXT_NEW_LEVEL, TXT_YOU_NOW_HAVE, TXT_SOMETHING_ELSE, TXT_LOCKED_CHEST, TXT_LOCKED_DOOR, TXT_NOTICED_SMTH, TXT_WAIT, TXT_SEARCH, STARTING_STR, TIME_TO_REST, TIME_TO_SEARCH, heroClass, subClass, attackSkill, defenseSkill, ready, curAction, lastAction, enemy, killerGlyph, theKey, restoreHealth, usingRanged, belongings, STR, weakened, awareness, lvl, exp, visibleEnemies, ATTACK, DEFENSE, STRENGTH, LEVEL, EXPERIENCE] and behaviors: [STR(), storeInBundle(Bundle), restoreFromBundle(Bundle), preview(GamesInProgress, Bundle), className(), live(), tier(), shoot(Char, Weapon), attackSkill(Char), defenseSkill(Char), dr(), damageRoll(), speed(), attackDelay(), spend(float), spendAndNext(float), act(), busy(), ready(), interrupt(), resume(), actMove(HeroAction), actInteract(HeroAction), actBuy(HeroAction), actCook(HeroAction), actPickUp(HeroAction), actOpenChest(HeroAction), actUnlock(HeroAction), actDescend(HeroAction), actAscend(HeroAction), actAttack(HeroAction), rest(boolean), attackProc(Char, int), defenseProc(Char, int), damage(int, Object), checkVisibleMobs(), visibleEnemies(), visibleEnemy(int), getCloser(int), handle(int), earnExp(int), maxExp(), updateAwareness(), isStarving(), add(Buff), remove(Buff), stealth(), die(Object), reallyDie(Object), move(int), onMotionComplete(), onAttackComplete(), onOperateComplete(), search(boolean), resurrect(int), resistances(), immunities()]
concept: [AntiEntropy] with properties: [TXT_ANTI_ENTROPY, BLUE] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Slow] with properties: [TXT_CHILLING, BLUE] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String), icon(), toString(), duration(Char)]
concept: [BArray] with behaviors: [and(boolean, boolean, boolean), or(boolean, boolean, boolean), not(boolean, boolean), is(int, boolean, int), isOneOf(int, boolean, int), isNot(int, boolean, int), isNotOneOf(int, boolean, int)]
concept: [Affection] with properties: [TXT_AFFECTION, PINK] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Paralysis] with properties: [TXT_STUNNING, YELLOW] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String), attachTo(Char), detach(), icon(), toString(), duration(Char)]
concept: [Frost] with properties: [DURATION] and behaviors: [attachTo(Char), detach(), icon(), toString(), duration(Char)]
concept: [Burning] with properties: [TXT_BURNS_UP, TXT_BURNED_TO_DEATH, DURATION, left, LEFT] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), act(), reignite(Char), icon(), toString(), duration(Char), onDeath()]
concept: [Javelin] with behaviors: [proc(Char, Char, int), desc(), random(), price()]
concept: [MeleeWeapon] with properties: [tier] and behaviors: [min(), max(), upgrade(), upgrade(boolean), safeUpgrade(), degrade(), typicalSTR(), info(), price(), random()]
concept: [Bestiary] with behaviors: [mob(int), mutable(int), mobClass(int), isUnique(Char)]
concept: [WandOfTelekinesis] with properties: [TXT_YOU_NOW_HAVE] and behaviors: [onZap(int), transport(Heap), open(Heap), fx(int, Callback), desc()]
concept: [GameLog] with properties: [MAX_MESSAGES, PUNCTUATION, lastEntry, lastColor] and behaviors: [newLine(), onSignal(String), layout(), destroy()]
concept: [Hunger] with properties: [STEP, HUNGRY, STARVING, TXT_HUNGRY, TXT_STARVING, TXT_DEATH, level, LEVEL] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), act(), satisfy(float), isStarving(), icon(), toString(), onDeath()]
concept: [Wound] with properties: [TIME_TO_FADE, time] and behaviors: [reset(int), update(), hit(Char), hit(Char, float), hit(int), hit(int, float)]
concept: [ItemIterator] with properties: [AC_OPEN, owner, items, size, ITEMS, index, nested] and behaviors: [actions(Hero), execute(Hero, String), collect(Bag), detach(Bag), isUpgradable(), isIdentified(), clear(), storeInBundle(Bundle), restoreFromBundle(Bundle), contains(Item), grab(Item), iterator(), hasNext(), next(), remove(), storeInBundle(Bundle), restoreFromBundle(Bundle), getItem(Class), getKey(Class, int), countIronKeys(), identify(), observe(), uncurseEquipped(), randomUnequipped(), resurrect(int), charge(boolean), discharge(), iterator(), hasNext(), next(), remove()]
concept: [Stench] with properties: [TXT_STENCH, GREEN] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Stylus] with properties: [TXT_SELECT_ARMOR, TXT_INSCRIBED, TIME_TO_INSCRIBE, AC_INSCRIBE, itemSelector] and behaviors: [actions(Hero), execute(Hero, String), isUpgradable(), isIdentified(), inscribe(Armor), price(), info()]
concept: [Potion] with properties: [AC_DRINK, TXT_HARMFUL, TXT_BENEFICIAL, TXT_YES, TXT_NO, TXT_R_U_SURE_DRINK, TXT_R_U_SURE_THROW, TIME_TO_DRINK, potions, colors, images, handler, color] and behaviors: [initColors(), save(Bundle), restore(Bundle), actions(Hero), execute(Hero, String), doThrow(Hero), drink(Hero), onThrow(int), apply(Hero), shatter(int), isKnown(), setKnown(), identify(), color(), name(), info(), isIdentified(), isUpgradable(), getKnown(), getUnknown(), allKnown(), splash(int), price()]
concept: [Shadows] with behaviors: [buff(), desc(), storeInBundle(Bundle), restoreFromBundle(Bundle), attachTo(Char), detach(), act(), prolong(), icon(), toString()]
concept: [IconTitle] with properties: [FONT_SIZE, GAP, imIcon, tfLabel] and behaviors: [createChildren(), layout(), icon(Image), label(String), label(String, int), color(int)]
concept: [PotionOfPurity] with properties: [TXT_FRESHNESS, TXT_NO_SMELL, DISTANCE] and behaviors: [shatter(int), apply(Hero), desc(), price()]
concept: [Point] with properties: [x, y] and behaviors: [set(int, int), set(Point), clone(), scale(float), offset(int, int), offset(Point), equals(Object)]
concept: [Barkskin] with properties: [level] and behaviors: [act(), level(), level(int), icon(), toString()]
concept: [Quest] with properties: [TXT_GOLEMS1, TXT_MONKS1, TXT_GOLEMS2, TXT_MONKS2, TXT_CYA, TXT_HEY, seenBefore, alternative, spawned, given, completed, reward, NODE, ALTERNATIVE, SPAWNED, GIVEN, COMPLETED, REWARD] and behaviors: [act(), defenseSkill(Char), defenseVerb(), damage(int, Object), add(Buff), reset(), interact(), tell(String, Object), flee(), description(), reset(), storeInBundle(Bundle), restoreFromBundle(Bundle), spawn(CityLevel, Room), process(Mob), complete(), isCompleted(), act(), interact(), tell(String), verify(Item, Item), upgrade(Item, Item), defenseSkill(Char), damage(int, Object), add(Buff), reset(), description(), reset(), storeInBundle(Bundle), restoreFromBundle(Bundle), spawn(Collection)]
concept: [WndResurrect] with properties: [TXT_MESSAGE, TXT_YES, TXT_NO, WIDTH, BTN_HEIGHT, GAP, instance, causeOfDeath] and behaviors: [destroy(), onBackPressed()]
concept: [Info] with properties: [state, depth, level, armor] and behaviors: [check(HeroClass), set(HeroClass, int, int, int), setUnknown(HeroClass), delete(HeroClass)]
concept: [Light] with properties: [DURATION, DISTANCE] and behaviors: [attachTo(Char), detach(), icon(), toString()]
concept: [Fire] with properties: [TXT_BLAZING, ORANGE] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String), evolve(), burn(int), seed(int, int), use(BlobEmitter), tileDesc()]
concept: [Actor] with properties: [TICK, time, TIME, all, current, now, chars] and behaviors: [act(), spend(float), postpone(float), cooldown(), diactivate(), onAdd(), onRemove(), storeInBundle(Bundle), restoreFromBundle(Bundle), clear(), fixTime(), init(), occupyCell(Char), freeCell(int), next(), process(), add(Actor), addDelayed(Actor, float), add(Actor, float), remove(Actor), findChar(int), all()]
concept: [Program] with properties: [handle] and behaviors: [handle(), attach(Shader), link(), attribute(String), uniform(String), use(), delete(), create(Shader)]
concept: [Speck] with properties: [DOTS] and behaviors: [update(), draw(), update(), reset(int, float, float, int), update(), factory(int)]
concept: [ItemSlot] with properties: [DEGRADED, UPGRADED, WARNING, ENABLED, DISABLED, icon, topLeft, topRight, bottomRight, TXT_STRENGTH, TXT_TYPICAL_STR, TXT_LEVEL, TXT_CURSED, CHEST, LOCKED_CHEST, TOMB, SKELETON] and behaviors: [createChildren(), layout(), item(Item), enable(boolean), showParams(boolean)]
concept: [Sheep] with properties: [QUOTES, lifespan, initialized] and behaviors: [onZap(int), fx(int, Callback), desc(), act(), damage(int, Object), description(), interact()]
concept: [Skeleton] with properties: [TXT_HERO_KILLED, IMMUNITIES] and behaviors: [damageRoll(), die(Object), dropLoot(), attackSkill(Char), dr(), defenseVerb(), description(), immunities()]
concept: [Poison] with properties: [TXT_VENOMOUS, PURPLE] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String), storeInBundle(Bundle), restoreFromBundle(Bundle), set(float), icon(), toString(), act(), durationFactor(Char), onDeath()]
concept: [Scroll] with properties: [TXT_BLINDED, AC_READ, TIME_TO_READ, scrolls, runes, images, handler, rune] and behaviors: [initLabels(), save(Bundle), restore(Bundle), actions(Hero), execute(Hero, String), doRead(), isKnown(), setKnown(), identify(), name(), info(), isUpgradable(), isIdentified(), getKnown(), getUnknown(), allKnown(), price()]
concept: [WndWandmaker] with properties: [TXT_MESSAGE, TXT_BATTLE, TXT_NON_BATTLE, TXT_FARAWELL, WIDTH, BTN_HEIGHT, GAP] and behaviors: [selectReward(Wandmaker, Item, Wand)]
concept: [CheckBox] with properties: [checked] and behaviors: [layout(), checked(), checked(boolean), onClick(), checked(), checked(boolean), updateState(), onClick(), onChange()]
concept: [Random] with behaviors: [Float(float, float), Float(float), Float(), Int(int), Int(int, int), IntRange(int, int), NormalIntRange(int, int), chances(float), chances(HashMap), index(Collection), oneOf(T), element(T), element(T, int), element(Collection), shuffle(T), shuffle(U, V)]
concept: [Touch] with properties: [eventKey, eventTouch, eventMouse, pointers, modifier, scroll, code, pressed, start, current, down] and behaviors: [keyDown(int), keyUp(int), keyTyped(char), touchDown(int, int, int, int), touchUp(int, int, int, int), touchDragged(int, int, int), mouseMoved(int, int), scrolled(int), update(int, int, int), up()]
concept: [Fury] with properties: [LEVEL] and behaviors: [act(), icon(), toString()]
concept: [Invisibility] with properties: [DURATION] and behaviors: [attachTo(Char), detach(), icon(), toString(), dispel()]
concept: [Bones] with properties: [BONES_FILE, LEVEL, ITEM, depth, item] and behaviors: [leave(), get()]
concept: [EquipableItem] with properties: [AC_EQUIP, AC_UNEQUIP] and behaviors: [execute(Hero, String), doDrop(Hero), cast(Hero, int), equipCursed(Hero), doEquip(Hero), doUnequip(Hero, boolean)]
concept: [LloydsBeacon] with properties: [TXT_PREVENTING, TXT_CREATURES, TXT_RETURN, TXT_INFO, TXT_SET, TIME_TO_USE, AC_SET, AC_RETURN, returnDepth, returnPos, DEPTH, POS, WHITE] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), actions(Hero), execute(Hero, String), reset(), isUpgradable(), isIdentified(), glowing(), info()]
concept: [BuffsTab] with properties: [TXT_STATS, TXT_BUFFS, TXT_EXP, TXT_STR, TXT_HEALTH, TXT_GOLD, TXT_DEPTH, WIDTH, TAB_WIDTH, stats, buffs, icons, film, TXT_TITLE, TXT_CATALOGUS, TXT_JOURNAL, GAP, pos, GAP, pos] and behaviors: [statSlot(String, String), statSlot(String, int), height(), buffSlot(Buff), height()]
concept: [Ankh] with behaviors: [isUpgradable(), isIdentified(), info(), price()]
concept: [Shield] with properties: [shield, phase] and behaviors: [link(Char), die(), update(), draw(), putOut()]
concept: [Thief] with properties: [TXT_STOLE, TXT_CARRIES, item, ITEM] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), damageRoll(), attackDelay(), nowhereToRun(), die(Object), attackSkill(Char), dr(), attackProc(Char, int), defenseProc(Char, int), steal(Hero), description()]
concept: [Patch] with properties: [cur, off] and behaviors: [generate(float, int)]
concept: [Amok] with behaviors: [icon(), toString()]
concept: [DeferedDamage] with properties: [TXT_VISCOSITY, PURPLE, damage, DAMAGE] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing(), storeInBundle(Bundle), restoreFromBundle(Bundle), attachTo(Char), prolong(int), icon(), toString(), act()]
concept: [Brute] with properties: [TXT_ENRAGED, enraged, IMMUNITIES] and behaviors: [restoreFromBundle(Bundle), damageRoll(), attackSkill(Char), dr(), damage(int, Object), description(), immunities()]
concept: [WndStory] with properties: [WIDTH, MARGIN, bgR, bgG, bgB, ID_SEWERS, ID_PRISON, ID_CAVES, ID_METROPOLIS, ID_HALLS, CHAPTERS, tf, delay] and behaviors: [update(), showChapter(int)]
concept: [TomeOfMastery] with properties: [TXT_BLINDED, TIME_TO_READ, AC_READ] and behaviors: [actions(Hero), execute(Hero, String), doPickUp(Hero), isUpgradable(), isIdentified(), info(), choose(HeroSubClass)]
concept: [Chasm] with properties: [TXT_CHASM, TXT_YES, TXT_NO, TXT_JUMP, jumpConfirmed] and behaviors: [heroJump(Hero), heroFall(int), heroLand(), mobFall(Mob)]
concept: [Larva] with properties: [TXT_DESC, fistsCount, IMMUNITIES, REGENERATION, RESISTANCES, IMMUNITIES, RESISTANCES, IMMUNITIES] and behaviors: [spawnFists(), damage(int, Object), defenseProc(Char, int), beckon(int), die(Object), notice(), description(), immunities(), die(Object), attackSkill(Char), damageRoll(), dr(), attackProc(Char, int), act(), description(), resistances(), immunities(), die(Object), attackSkill(Char), damageRoll(), dr(), canAttack(Char), attack(Char), act(), description(), resistances(), immunities(), attackSkill(Char), damageRoll(), dr(), description()]
concept: [Dewdrop] with properties: [TXT_VALUE] and behaviors: [doPickUp(Hero), info()]
concept: [Boomerang] with behaviors: [isUpgradable(), upgrade(), upgrade(boolean), degrade(), enchant(Enchantment), proc(Char, Char, int), miss(int), circleBack(int, Hero), desc()]
concept: [Signal] with properties: [listeners, canceled, stackMode] and behaviors: [add(Listener), remove(Listener), removeAll(), replace(Listener), numListeners(), dispatch(T), cancel()]
concept: [Quad] with properties: [VALUES, SIZE, cache, INDICES_1] and behaviors: [create(), createSet(int), getIndices(int), fill(float, float, float, float, float, float, float, float, float), fillXY(float, float, float, float, float), fillUV(float, float, float, float, float)]
concept: [AboutScene] with properties: [TXT, LNK] and behaviors: [create(), onBackPressed()]
concept: [ScrollOfTeleportation] with properties: [TXT_TELEPORTED, TXT_NO_TELEPORT] and behaviors: [doRead(), teleportHero(Hero), desc(), price()]
concept: [KindOfWeapon] with properties: [TXT_EQUIP_CURSED, TXT_UNEQUIP_CURSED, TIME_TO_EQUIP, MIN, MAX] and behaviors: [actions(Hero), isEquipped(Hero), doEquip(Hero), doUnequip(Hero, boolean), activate(Hero), damageRoll(Hero), acuracyFactor(Hero), speedFactor(Hero), proc(Char, Char, int)]
concept: [Gold] with properties: [TXT_COLLECT, TXT_INFO, TXT_INFO_1, TXT_VALUE, VALUE] and behaviors: [actions(Hero), doPickUp(Hero), isUpgradable(), isIdentified(), info(), random(), storeInBundle(Bundle), restoreFromBundle(Bundle)]
concept: [TenguSprite] with properties: [cast] and behaviors: [move(int, int), attack(int), onComplete(Animation)]
concept: [Tweener] with properties: [target, interval, elapsed, listener] and behaviors: [update(), onComplete(), updateValues(float)]
concept: [WndTradeItem] with properties: [GAP, WIDTH, BTN_HEIGHT, TXT_SALE, TXT_BUY, TXT_SELL, TXT_SELL_1, TXT_SELL_ALL, TXT_CANCEL, TXT_SOLD, TXT_BOUGHT, owner] and behaviors: [hide(), createDescription(Item, boolean), sell(Item), sellOne(Item), price(Item), buy(Heap)]
concept: [ScrollOfRemoveCurse] with properties: [TXT_PROCCED, TXT_NOT_PROCCED] and behaviors: [doRead(), desc(), uncurse(Hero, Item), price()]
concept: [CellEmitter] with behaviors: [get(int), center(int), bottom(int)]
concept: [WndImp] with properties: [TXT_MESSAGE, TXT_REWARD, WIDTH, BTN_HEIGHT, GAP] and behaviors: [takeReward(Imp, DwarfToken, Item)]
concept: [QuickSlot] with properties: [TXT_SELECT_ITEM, instance, itemInSlot, slot, crossB, crossM, targeting, lastItem, lastTarget] and behaviors: [destroy(), createChildren(), layout(), onClick(), onLongClick(), select(), onSelect(Item), item(Item), enable(boolean), enableSlot(), useTargeting(), refresh(), target(Item, Char), cancel()]
concept: [SmartTexture] with properties: [width, height, fModeMin, fModeMax, wModeH, wModeV, atlas] and behaviors: [filter(TextureFilter, TextureFilter), wrap(TextureWrap, TextureWrap), bitmap(GdxTexture), bitmap(GdxTexture, boolean), reload(), delete(), uvRect(int, int, int, int)]
concept: [WaterOfHealth] with properties: [TXT_PROCCED] and behaviors: [affectHero(Hero), affectItem(Item), use(BlobEmitter), tileDesc()]
concept: [Component] with properties: [x, y, width, height] and behaviors: [setPos(float, float), setSize(float, float), setRect(float, float, float, float), inside(float, float), fill(Component), left(), right(), centerX(), top(), bottom(), centerY(), width(), height(), createChildren(), layout()]
concept: [Levitation] with properties: [DURATION] and behaviors: [attachTo(Char), detach(), icon(), toString()]
concept: [Death] with properties: [TXT_GRIM, BLACK] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String)]
concept: [DwarfToken] with behaviors: [isUpgradable(), isIdentified(), info(), price()]
concept: [Record] with properties: [records, JOURNAL, FEATURE, DEPTH, feature, depth] and behaviors: [reset(), storeInBundle(Bundle), restoreFromBundle(Bundle), add(Feature), remove(Feature), compareTo(Record), restoreFromBundle(Bundle), storeInBundle(Bundle), restoreFromBundle(Bundle), storeInBundle(Bundle), create(), onBackPressed(), createChildren(), layout(), onClick()]
concept: [BlobEmitter] with properties: [WIDTH, LENGTH, blob] and behaviors: [emit(int)]
concept: [Cripple] with properties: [DURATION] and behaviors: [icon(), toString()]
concept: [Power] with behaviors: [buff(), desc()]
concept: [Tag] with properties: [r, g, b, bg, lightness] and behaviors: [createChildren(), layout(), flash(), update()]
concept: [ItemStatusHandler] with properties: [items, images, labels, known, PFX_IMAGE, PFX_LABEL, PFX_KNOWN] and behaviors: [save(Bundle), restore(Bundle, String, Integer), image(T), label(T), isKnown(T), know(T), known(), unknown()]
concept: [PointF] with properties: [PI, G2R, x, y] and behaviors: [clone(), scale(float), invScale(float), set(float, float), set(PointF), set(float), polar(float, float), offset(float, float), offset(PointF), negate(), normalize(), floor(), length(), sum(PointF, PointF), diff(PointF, PointF), inter(PointF, PointF, float), distance(PointF, PointF), angle(PointF, PointF), toString()]
concept: [IntroScene] with properties: [TEXT] and behaviors: [create()]
concept: [NPC] with properties: [TXT_DIED, TXT_NOTICE1, TXT_RAGE, TXT_EXP, state, spriteClass, target, defenseSkill, EXP, maxLvl, enemy, enemySeen, alerted, TIME_TO_WAKE_UP, hostile, DUMMY, STATE, TARGET, loot, lootChance] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), sprite(), act(), chooseEnemy(), nowhereToRun(), moveSprite(int, int), add(Buff), remove(Buff), canAttack(Char), getCloser(int), getFurther(int), move(int), attackDelay(), doAttack(Char), onAttackComplete(), defenseSkill(Char), defenseProc(Char, int), damage(int, Object), destroy(), die(Object), dropLoot(), reset(), beckon(int), description(), notice(), yell(String), throwItem(), beckon(int), interact()]
concept: [Horror] with properties: [TXT_ELDRITCH, GREY] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String)]
concept: [AmuletScene] with properties: [TXT_EXIT, TXT_STAY, WIDTH, BTN_HEIGHT, SMALL_GAP, LARGE_GAP, TXT, noText, amulet, timer] and behaviors: [create(), onBackPressed(), update()]
concept: [FetidRat] with properties: [TXT_ROSE1, TXT_ROSE2, TXT_RAT1, TXT_RAT2, IMMUNITIES, spawned, alternative, given, processed, depth, left2kill, weapon, armor, NODE, SPAWNED, ALTERNATIVE, LEFT2KILL, GIVEN, PROCESSED, DEPTH, WEAPON, ARMOR, IMMUNITIES] and behaviors: [defenseSkill(Char), defenseVerb(), speed(), chooseEnemy(), damage(int, Object), add(Buff), reset(), interact(), description(), immunities(), reset(), storeInBundle(Bundle), restoreFromBundle(Bundle), spawn(SewerLevel), process(int), complete(), damageRoll(), attackSkill(Char), dr(), defenseProc(Char, int), die(Object), description(), immunities()]
concept: [Generator] with properties: [categoryProbs] and behaviors: [reset(), random(), random(Category), random(Class), randomArmor(), randomWeapon()]
concept: [ClassArmor] with properties: [TXT_LOW_HEALTH, TXT_NOT_EQUIPPED, ARMOR_STR, ARMOR_DR] and behaviors: [upgrade(Hero, Armor), storeInBundle(Bundle), restoreFromBundle(Bundle), actions(Hero), execute(Hero, String), special(), doSpecial(), isUpgradable(), isIdentified(), price(), desc()]
concept: [Resistance] with properties: [EMPTY, FULL] and behaviors: [buff(), desc(), resistances(), durationFactor()]
concept: [RectF] with properties: [left, right, top, bottom] and behaviors: [width(), height(), offset(float, float)]
concept: [Matrix] with properties: [G2RAD] and behaviors: [clone(float), copy(float, float), setIdentity(float), rotate(float, float), skewX(float, float), skewY(float, float), scale(float, float, float), translate(float, float, float), multiply(float, float, float)]
concept: [Toast] with properties: [MARGIN_HOR, MARGIN_VER, bg, close, text] and behaviors: [createChildren(), layout(), text(String), onClose()]
concept: [Senior] with behaviors: [damageRoll(), attackProc(Char, int), die(Object)]
concept: [Tamahawk] with behaviors: [proc(Char, Char, int), desc(), random(), price()]
concept: [Eye] with properties: [TXT_DEATHGAZE_KILLED, hitCell, RESISTANCES, IMMUNITIES] and behaviors: [dr(), canAttack(Char), attackSkill(Char), attackDelay(), doAttack(Char), attack(Char), description(), resistances(), immunities()]
concept: [Game] with properties: [instance, width, height, density, version, basePath, scene, requestedScene, requestedReset, sceneClass, now, step, timeScale, elapsed, keyListener] and behaviors: [create(), resume(), pause(), dispose(), render(), resize(int, int), onSurfaceCreated(), destroyGame(), resetScene(), switchScene(Class), scene(), step(), draw(), switchScene(), update(), vibrate(int), deleteFile(String), openFileInput(String), openFileOutput(String), finish()]
concept: [Flow] with properties: [FACTORY, DELAY, pos, x, y, delay] and behaviors: [reset(float, float), update(), update()]
concept: [Rect] with properties: [left, top, right, bottom] and behaviors: [width(), height(), square(), set(int, int, int, int), set(Rect), isEmpty(), setEmpty(), intersect(Rect), union(int, int), union(Point), inside(Point), shrink(int), shrink()]
concept: [Chrome] with behaviors: [get(Type)]
concept: [WandOfBlink] with behaviors: [onZap(int), fx(int, Callback), appear(Char, int), desc()]
concept: [Luck] with properties: [TXT_LUCKY, GREEN] and behaviors: [proc(Weapon, Char, Char, int), name(String), glowing()]
concept: [Web] with behaviors: [evolve(), use(BlobEmitter), seed(int, int), tileDesc()]
concept: [Mace] with behaviors: [desc()]
concept: [ColorMath] with behaviors: [interpolate(int, int, float), interpolate(float, int), random(int, int)]
concept: [SnipersMark] with behaviors: [icon(), toString()]
concept: [Effect] with properties: [sprite, from, to, effect, DELAY, end, delay] and behaviors: [act(), update()]
concept: [ShortSword] with properties: [AC_REFORGE, TXT_SELECT_WEAPON, TXT_REFORGED, TXT_NOT_BOOMERANG, TIME_TO_REFORGE, equipped, itemSelector] and behaviors: [actions(Hero), execute(Hero, String), desc()]
concept: [Leech] with properties: [TXT_VAMPIRIC, RED] and behaviors: [proc(Weapon, Char, Char, int), glowing(), name(String)]
concept: [Ooze] with properties: [TXT_HERO_KILLED, damage] and behaviors: [icon(), toString(), act()]
concept: [Path] with properties: [distance, goals, queue, size, dir] and behaviors: [setMapSize(int, int), find(int, int, boolean), getStep(int, int, boolean), getStepBack(int, int, boolean), buildDistanceMap(int, int, boolean), buildDistanceMap(int, boolean, int), buildDistanceMap(int, boolean, boolean), buildEscapeDistanceMap(int, int, float, boolean), buildDistanceMap(int, boolean)]
concept: [ImpShopkeeper] with properties: [TXT_GREETINGS, seenBefore] and behaviors: [act(), flee(), description()]
concept: [Goo] with properties: [PUMP_UP_DELAY, pumpedUp, RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), act(), canAttack(Char), attackProc(Char, int), doAttack(Char), attack(Char), getCloser(int), move(int), die(Object), notice(), description(), resistances()]
concept: [ScrollOfUpgrade] with properties: [TXT_LOOKS_BETTER] and behaviors: [onItemSelected(Item), upgrade(Hero), desc()]
concept: [CurareDart] with properties: [DURATION] and behaviors: [proc(Char, Char, int), desc(), random(), price()]
concept: [Renderbuffer] with properties: [RGBA8, DEPTH16, STENCIL8, id] and behaviors: [id(), bind(), delete(), storage(int, int, int)]
concept: [RatKing] with behaviors: [defenseSkill(Char), speed(), chooseEnemy(), damage(int, Object), add(Buff), reset(), interact(), description()]
concept: [Electricity] with properties: [name, LIGHTNING] and behaviors: [trigger(int, Char)]
concept: [Monk] with properties: [TXT_DISARM, IMMUNITIES] and behaviors: [damageRoll(), attackSkill(Char), attackDelay(), dr(), defenseVerb(), die(Object), attackProc(Char, int), description(), immunities()]
concept: [WaterOfAwareness] with properties: [TXT_PROCCED] and behaviors: [affectHero(Hero), affectItem(Item), use(BlobEmitter), tileDesc()]
concept: [ScrollOfLullaby] with behaviors: [doRead(), desc(), price()]
concept: [PassagePainter] with properties: [pasWidth, pasHeight] and behaviors: [paint(Level, Room), xy2p(Room, Point), p2xy(Room, int)]
concept: [Albino] with behaviors: [die(Object), attackProc(Char, int)]
concept: [Pickaxe] with properties: [AC_MINE, TIME_TO_MINE, TXT_NO_VEIN, BLOODY, bloodStained, BLOODSTAINED] and behaviors: [actions(Hero), execute(Hero, String), isUpgradable(), isIdentified(), proc(Char, Char, int), storeInBundle(Bundle), restoreFromBundle(Bundle), glowing(), info()]
concept: [Shielded] with behaviors: [dr(), defenseVerb(), die(Object)]
concept: [Food] with properties: [TIME_TO_EAT, AC_EAT, energy, message] and behaviors: [actions(Hero), execute(Hero, String), info(), isUpgradable(), isIdentified(), price()]
concept: [Dart] with behaviors: [desc(), random(), price()]
concept: [ListItem] with properties: [items, HEIGHT, badge, icon, label] and behaviors: [layout(), onClick(float, float), createChildren(), layout(), onClick(float, float), createChildren(), layout(), updateList(), createChildren(), layout(), onClick(float, float)]
concept: [SkeletonKey] with behaviors: [isSimilar(Item), info()]
concept: [GrippingTrap] with behaviors: [trigger(int, Char)]
concept: [MailArmor] with behaviors: [desc()]
concept: [Spinner] with properties: [RESISTANCES, IMMUNITIES] and behaviors: [damageRoll(), nowhereToRun(), attackSkill(Char), dr(), act(), attackProc(Char, int), move(int), description(), resistances(), immunities()]
concept: [Bleeding] with properties: [level, LEVEL] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), set(int), icon(), toString(), act()]
concept: [Swarm] with properties: [SPLIT_DELAY, generation, GENERATION] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), damageRoll(), defenseProc(Char, int), attackSkill(Char), defenseVerb(), split(), dropLoot(), description()]
concept: [MageArmor] with properties: [AC_SPECIAL, TXT_NOT_MAGE] and behaviors: [special(), desc(), doSpecial(), doEquip(Hero)]
concept: [Bat] with properties: [RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), defenseVerb(), attackProc(Char, int), description(), resistances()]
concept: [BlacksmithSprite] with properties: [emitter] and behaviors: [link(Char), update(), onComplete(Animation)]
concept: [SpellSprite] with properties: [FOOD, MAP, CHARGE, MASTERY, SIZE, FADE_IN_TIME, STATIC_TIME, FADE_OUT_TIME, film, target, phase, duration, passed, all] and behaviors: [reset(int), update(), kill(), show(Char, int)]
concept: [Texture] with properties: [premultiplied, bitmap] and behaviors: [activate(int), bind(), filter(TextureFilter, TextureFilter), wrap(TextureWrap, TextureWrap), delete(), bitmap(GdxTexture), pixels(int, int, int), pixels(int, int, byte), handMade(GdxTexture, boolean), create(GdxTexture), create(int, int, int), create(int, int, byte)]
concept: [WndSadGhost] with properties: [TXT_ROSE, TXT_RAT, TXT_WEAPON, TXT_ARMOR, WIDTH, BTN_HEIGHT, GAP] and behaviors: [selectReward(Ghost, Item, Item)]
concept: [DewVial] with properties: [MAX_VOLUME, AC_DRINK, TIME_TO_DRINK, TXT_VALUE, TXT_STATUS, TXT_AUTO_DRINK, TXT_COLLECTED, TXT_FULL, TXT_EMPTY, volume, VOLUME, NUM, POW, WHITE] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), actions(Hero), execute(Hero, String), isUpgradable(), isIdentified(), isFull(), collectDew(Dewdrop), fill(), autoDrink(Hero), glowing(), status(), info(), toString()]
concept: [Acidic] with behaviors: [defenseProc(Char, int), die(Object)]
concept: [ColorBlock] with behaviors: [size(float, float), width(), height()]
concept: [DriedRose] with behaviors: [isUpgradable(), isIdentified(), info()]
concept: [Blob] with properties: [WIDTH, HEIGHT, LENGTH, volume, cur, off, emitter, CUR, START] and behaviors: [storeInBundle(Bundle), trim(int, int), restoreFromBundle(Bundle), act(), use(BlobEmitter), evolve(), seed(int, int), clear(int), tileDesc(), seed(int, int, Class)]
concept: [WandOfAvalanche] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [Painter] with behaviors: [set(Level, int, int), set(Level, int, int, int), set(Level, Point, int), fill(Level, int, int, int, int, int), fill(Level, Rect, int), fill(Level, Rect, int, int), fill(Level, Rect, int, int, int, int, int), drawInside(Level, Room, Point, int, int)]
concept: [PotionOfInvisibility] with properties: [ALPHA] and behaviors: [apply(Hero), desc(), price(), melt(Char)]
concept: [PotionOfToxicGas] with behaviors: [shatter(int), desc(), price()]
concept: [PotionOfLiquidFlame] with behaviors: [shatter(int), desc(), price()]
concept: [Statistics] with properties: [goldCollected, deepestFloor, enemiesSlain, foodEaten, potionsCooked, piranhasKilled, nightHunt, ankhsUsed, duration, qualifiedForNoKilling, completedWithNoKilling, amuletObtained, GOLD, DEEPEST, SLAIN, FOOD, ALCHEMY, PIRANHAS, NIGHT, ANKHS, DURATION, AMULET] and behaviors: [reset(), storeInBundle(Bundle), restoreFromBundle(Bundle)]
concept: [WebParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [MysteryMeat] with behaviors: [execute(Hero, String), info(), price()]
concept: [PotionOfMight] with behaviors: [apply(Hero), desc(), price()]
concept: [ArmorKit] with properties: [TXT_SELECT_ARMOR, TXT_UPGRADED, TIME_TO_UPGRADE, AC_APPLY, itemSelector] and behaviors: [actions(Hero), execute(Hero, String), isUpgradable(), isIdentified(), upgrade(Armor), info()]
concept: [SummoningTrap] with properties: [DELAY, DUMMY] and behaviors: [trigger(int, Char)]
concept: [ScrollOfPsionicBlast] with behaviors: [doRead(), desc(), price()]
concept: [RingBuff] with properties: [TIME_TO_EQUIP, TXT_IDENTIFY, buff, rings, gems, images, handler, gem, ticksToKnow, TXT_KNOWN, level] and behaviors: [initGems(), save(Bundle), restore(Bundle), syncGem(), actions(Hero), doEquip(Hero), activate(Char), doUnequip(Hero, boolean), isEquipped(Hero), upgrade(), isKnown(), setKnown(), name(), desc(), info(), isIdentified(), identify(), random(), allKnown(), price(), buff(), attachTo(Char), act()]
concept: [Spear] with behaviors: [desc()]
concept: [Sword] with behaviors: [desc()]
concept: [PosTweener] with properties: [visual, start, end] and behaviors: [updateValues(float)]
concept: [FireTrap] with behaviors: [trigger(int, Char)]
concept: [GoldIndicator] with properties: [TIME, lastValue, tf, time] and behaviors: [createChildren(), layout(), update()]
concept: [Metabolism] with properties: [TXT_METABOLISM, RED] and behaviors: [proc(Armor, Char, Char, int), name(String), glowing()]
concept: [Effects] with behaviors: [get(Type)]
concept: [ScrollOfMagicMapping] with properties: [TXT_LAYOUT] and behaviors: [doRead(), desc(), price(), discover(int)]
concept: [PotionOfFrost] with properties: [DISTANCE] and behaviors: [shatter(int), desc(), price()]
concept: [ScaleTweener] with properties: [visual, start, end] and behaviors: [updateValues(float)]
concept: [PoisonTrap] with behaviors: [trigger(int, Char)]
concept: [IncendiaryDart] with behaviors: [onThrow(int), proc(Char, Char, int), desc(), random(), price()]
concept: [Shader] with properties: [VERTEX, FRAGMENT, handle] and behaviors: [handle(), source(String), compile(), delete(), createCompiled(int, String)]
concept: [AlchemyPot] with properties: [TXT_SELECT_SEED, hero, pos, itemSelector] and behaviors: [operate(Hero, int)]
concept: [Dagger] with behaviors: [desc()]
concept: [DashboardItem] with properties: [TXT_PLAY, TXT_HIGHSCORES, TXT_BADGES, TXT_ABOUT, SIZE, IMAGE_SIZE, image, label] and behaviors: [create(), placeTorch(float, float), createChildren(), layout(), onTouchDown(), onTouchUp()]
concept: [Terror] with properties: [DURATION, source] and behaviors: [icon(), restoreFromBundle(Bundle), toString(), recover(Char)]
concept: [Banner] with properties: [state, time, color, fadeTime, showTime] and behaviors: [show(int, float, float), show(int, float), update()]
concept: [Lightning] with properties: [DURATION, life, length, cx, cy, arcsS, arcsE, callback, A] and behaviors: [update(), draw()]
concept: [Heap] with properties: [SEEDS_TO_POTION, type, pos, sprite, items, POS, TYPE, ITEMS] and behaviors: [image(), glowing(), open(Hero), size(), pickUp(), peek(), drop(Item), replace(Item, Item), burn(), freeze(), transmute(), burnFX(int), evaporateFX(int), isEmpty(), destroy(), restoreFromBundle(Bundle), storeInBundle(Bundle)]
concept: [MissileWeapon] with properties: [TXT_MISSILES, TXT_YES, TXT_NO, TXT_R_U_SURE] and behaviors: [actions(Hero), onThrow(int), miss(int), proc(Char, Char, int), doEquip(Hero), random(), isUpgradable(), isIdentified(), info()]
concept: [RedButton] with properties: [bg, text, icon] and behaviors: [createChildren(), layout(), onTouchDown(), onTouchUp(), enable(boolean), text(String), icon(Image), reqWidth(), reqHeight()]
concept: [ScrollOfChallenge] with behaviors: [doRead(), desc()]
concept: [ParalyticTrap] with behaviors: [trigger(int, Char)]
concept: [HealthIndicator] with properties: [HEIGHT, instance, target, bg, level] and behaviors: [createChildren(), update(), target(Char), target()]
concept: [PotionOfStrength] with behaviors: [apply(Hero), desc(), price()]
concept: [IceBlock] with properties: [phase, target] and behaviors: [update(), melt(), freeze(CharSprite)]
concept: [BadgesScene] with properties: [TXT_TITLE] and behaviors: [create(), onBackPressed()]
concept: [PixelDungeon] with behaviors: [create(), resize(int, int), landscape(boolean), landscape(), fullscreen(boolean), fullscreen(), scaleUp(boolean), scaleUp(), zoom(int), zoom(), music(boolean), music(), soundFx(boolean), soundFx(), brightness(boolean), brightness(), donated(String), donated(), lastClass(int), lastClass(), intro(boolean), intro(), reportException(Exception)]
concept: [Blindness] with behaviors: [detach(), icon(), toString()]
concept: [GoldenKey] with behaviors: [info()]
concept: [FetidRatSprite] with properties: [cloud] and behaviors: [link(Char), update(), die()]
concept: [AlphaTweener] with properties: [image, start, delta] and behaviors: [updateValues(float)]
concept: [PickedUpItem] with properties: [btnWait, btnSearch, btnInfo, btnResume, btnInventory, btnQuick, pickedUp, lastEnabled, informer, BGCOLOR, base, slot, DISTANCE, DURATION, dstX, dstY, left] and behaviors: [createChildren(), layout(), update(), pickup(Item), createChildren(), layout(), onTouchDown(), onTouchUp(), enable(boolean), createChildren(), layout(), enable(boolean), reset(Item, float, float), update()]
concept: [Crab] with behaviors: [damageRoll(), attackSkill(Char), dr(), defenseVerb(), die(Object), description()]
concept: [GasesImmunity] with properties: [DURATION, IMMUNITIES] and behaviors: [icon(), toString()]
concept: [ClothArmor] with behaviors: [desc()]
concept: [Alchemy] with properties: [pos] and behaviors: [restoreFromBundle(Bundle), evolve(), seed(int, int), transmute(int), use(BlobEmitter)]
concept: [Amulet] with properties: [AC_END] and behaviors: [actions(Hero), execute(Hero, String), doPickUp(Hero), showAmuletScene(boolean), isIdentified(), isUpgradable(), info()]
concept: [StandardPainter] with behaviors: [paint(Level, Room), paintBurned(Level, Room), paintGraveyard(Level, Room), paintStriped(Level, Room), paintStudy(Level, Room), paintBridge(Level, Room), paintFissure(Level, Room)]
concept: [RegularLevel] with properties: [rooms, roomEntrance, roomExit, specials, secretDoors, minRoomSize, maxRoomSize] and behaviors: [build(), initRooms(), assignRoomType(), paintWater(), paintGrass(), water(), grass(), placeTraps(), nTraps(), trapChances(), split(Rect), paint(), placeDoors(Room), paintDoors(Room), joinRooms(Room, Room), nMobs(), createMobs(), randomRespawnCell(), randomDestination(), createItems(), randomRoom(Room, int), room(int), randomDropCell(), pitCell(), storeInBundle(Bundle), restoreFromBundle(Bundle)]
concept: [LabeledTab] with properties: [tabs, selected, CUT, selected, bg, btLabel] and behaviors: [add(Tab), select(int), select(Tab), resize(int, int), tabHeight(), onClick(Tab), onKeyDown(PDInputProcessor), layout(), select(boolean), onClick(), createChildren(), layout(), select(boolean)]
concept: [Gnoll] with behaviors: [damageRoll(), attackSkill(Char), dr(), die(Object), description()]
concept: [WandOfRegrowth] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [SkinnedBlock] with properties: [scaleX, scaleY, offsetX, offsetY] and behaviors: [frame(RectF), updateFrame(), offsetTo(float, float), offset(float, float), scale(float, float), size(float, float)]
concept: [Detection] with behaviors: [doEquip(Hero), buff(), desc()]
concept: [ElmoParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [Wind] with properties: [FACTORY, angle, speed, size, pos, x, y, delay] and behaviors: [reset(float, float), update(), update()]
concept: [WaterOfTransmutation] with behaviors: [affectItem(Item), use(BlobEmitter), changeWeapon(MeleeWeapon), changeRing(Ring), changeWand(Wand), changeSeed(Plant), changeScroll(Scroll), changePotion(Potion), tileDesc()]
concept: [WandOfAmok] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [LeatherArmor] with behaviors: [desc()]
concept: [Key] with properties: [TIME_TO_UNLOCK, depth, DEPTH] and behaviors: [isSimilar(Item), detach(Bag), storeInBundle(Bundle), restoreFromBundle(Bundle), isUpgradable(), isIdentified()]
concept: [Button] with properties: [longClick, hotArea, pressed, pressTime, processed, hotKey] and behaviors: [createChildren(), update(), onTouchDown(), onTouchUp(), onClick(), onLongClick(), onKeyDown(PDInputProcessor), onKeyUp(PDInputProcessor), layout()]
concept: [ColdParticle] with properties: [SPEED, callback, sx, sy, time, FACTORY, FACTORY, FACTORY, emitter, FACTORY, FACTORY, FACTORY] and behaviors: [reset(int, int, Callback), size(float), blueLight(Group, int, int, Callback), fire(Group, int, int, Callback), earth(Group, int, int, Callback), purpleLight(Group, int, int, Callback), whiteLight(Group, int, int, Callback), wool(Group, int, int, Callback), poison(Group, int, int, Callback), foliage(Group, int, int, Callback), slowness(Group, int, int, Callback), force(Group, int, int, Callback), coldLight(Group, int, int, Callback), shadow(Group, int, int, Callback), update(), reset(float, float), update(), reset(float, float), reset(float, float), update(), reset(float, float, Emitter), update(), reset(float, float), update(), reset(float, float), update()]
concept: [Framebuffer] with properties: [COLOR, DEPTH, STENCIL, system, id] and behaviors: [bind(), delete(), status()]
concept: [TouchArea] with properties: [target, touch, keyListener, mouseListener] and behaviors: [onMouseScroll(int), onKeyDown(PDInputProcessor), onKeyUp(PDInputProcessor), setupListeners(), onSignal(PDInputProcessor), onTouchDown(PDInputProcessor), onTouchUp(PDInputProcessor), onClick(PDInputProcessor), onDrag(PDInputProcessor), reset(), destroy()]
concept: [PotionOfParalyticGas] with behaviors: [shatter(int), desc(), price()]
concept: [ImpSprite] with behaviors: [link(Char), onComplete(Animation)]
concept: [ElementalSprite] with behaviors: [link(Char), die(), blood()]
concept: [Haste] with behaviors: [buff(), desc()]
concept: [Door] with properties: [neigbours, connected, distance, price, SPECIALS, type, ROOMS, type] and behaviors: [random(), random(int), addNeigbour(Room), connect(Room), entrance(), inside(int), center(), distance(), distance(int), price(), price(int), edges(), storeInBundle(Bundle), restoreFromBundle(Bundle), shuffleTypes(), useType(Type), restoreRoomsFromBundle(Bundle), storeRoomsInBundle(Bundle), set(Type), enter(int), leave(int)]
concept: [Image] with properties: [texture, frame, flipHorizontal, flipVertical, vertices, verticesBuffer, dirty] and behaviors: [texture(Object), frame(RectF), frame(int, int, int, int), frame(), copy(Image), updateFrame(), updateVertices(), draw()]
concept: [Rejuvenation] with behaviors: [buff(), desc()]
concept: [Pasty] with behaviors: [info(), price()]
concept: [Factory] with properties: [lightMode, x, y, width, height, target, interval, quantity, count, time, on, autoKill, factory] and behaviors: [pos(float, float), pos(PointF), pos(float, float, float, float), pos(Visual), burst(Factory, int), pour(Factory, float), start(Factory, float, int), update(), emit(int), draw(), emit(Emitter, int, float, float), lightMode()]
concept: [Elemental] with properties: [IMMUNITIES] and behaviors: [damageRoll(), attackSkill(Char), dr(), attackProc(Char, int), add(Buff), description(), immunities()]
concept: [GameButton] with properties: [BUTTON_HEIGHT, GAP, TXT_TITLE, TXT_LOAD, TXT_NEW, TXT_ERASE, TXT_DPTH_LVL, TXT_REALLY, TXT_WARNING, TXT_YES, TXT_NO, TXT_UNLOCK, width, height, top, left, gems, avatar, frame, className, btnMastery, btnLoad, btnNewGame, huntressUnlocked, unlock, curClass, WIDTH, HEIGHT, SCALE, frames, brightness, bg, icon, cl, SECONDARY_COLOR, secondary] and behaviors: [create(), updateClass(HeroClass), startNewGame(), onBackPressed(), selectClass(HeroClass), flash(), update(), createChildren(), layout(), onTouchDown(), highlight(boolean), createChildren(), layout(), secondary(String)]
concept: [Shaman] with properties: [TIME_TO_ZAP, TXT_LIGHTNING_KILLED, RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), canAttack(Char), doAttack(Char), call(), description(), resistances()]
concept: [Charger] with properties: [AC_ZAP, TXT_WOOD, TXT_DAMAGE, TXT_WEAPON, TXT_FIZZLES, TXT_SELF_TARGET, TIME_TO_ZAP, maxCharges, curCharges, charger, curChargeKnown, hitChars, wands, woods, images, handler, wood, MAX_CHARGES, CUR_CHARGES, CUR_CHARGE_KNOWN, zapper, TIME_TO_CHARGE] and behaviors: [initWoods(), save(Bundle), restore(Bundle), actions(Hero), doUnequip(Hero, boolean), activate(Hero), execute(Hero, String), onZap(int), collect(Bag), charge(Char), detach(Bag), stopCharging(), level(), isKnown(), setKnown(), identify(), toString(), name(), info(), isIdentified(), status(), upgrade(), degrade(), updateLevel(), initialCharges(), calculateDamage(), fx(int, Callback), wandUsed(), random(), allKnown(), price(), storeInBundle(Bundle), restoreFromBundle(Bundle), attachTo(Char), act(), delay()]
concept: [Animation] with properties: [curAnim, curFrame, frameTimer, finished, paused, listener, delay, frames, looped] and behaviors: [update(), updateAnimation(), play(Animation), play(Animation, boolean), frames(RectF), frames(TextureFilm, Object), clone()]
concept: [StatusPane] with properties: [shield, avatar, blood, lastTier, hp, exp, lastLvl, lastKeys, level, depth, keys, danger, loot, buffs, compass] and behaviors: [createChildren(), layout(), update()]
concept: [WandHolster] with behaviors: [grab(Item), collect(Bag), detach(Bag), price(), info()]
concept: [Attribute] with properties: [location] and behaviors: [location(), enable(), disable(), vertexPointer(int, int, FloatBuffer)]
concept: [WarriorArmor] with properties: [LEAP_TIME, SHOCK_TIME, AC_SPECIAL, TXT_NOT_WARRIOR, leaper] and behaviors: [special(), doSpecial(), doEquip(Hero), desc()]
concept: [SplashFactory] with properties: [FACTORY, color, dir, cone] and behaviors: [at(int, int, int), at(PointF, int, int), at(PointF, float, float, int, int), emit(Emitter, int, float, float)]
concept: [Longsword] with behaviors: [desc()]
concept: [ToxicTrap] with behaviors: [trigger(int, Char)]
concept: [PotionOfLevitation] with behaviors: [apply(Hero), desc(), price()]
concept: [BurningFistSprite] with properties: [posToShoot] and behaviors: [attack(int), onComplete(Animation)]
concept: [ChargrilledMeat] with behaviors: [info(), price(), cook(MysteryMeat)]
concept: [ShopPainter] with properties: [pasWidth, pasHeight] and behaviors: [paint(Level, Room), range(), placeShopkeeper(Level, Room), xy2p(Room, Point), p2xy(Room, int)]
concept: [InterlevelScene] with properties: [TIME_TO_FADE, TXT_DESCENDING, TXT_ASCENDING, TXT_LOADING, TXT_RESURRECTING, TXT_RETURNING, TXT_FALLING, ERR_FILE_NOT_FOUND, ERR_GENERIC, mode, returnDepth, returnPos, noStory, fallIntoPit, phase, timeLeft, message, thread, error] and behaviors: [create(), update(), descend(), fall(), ascend(), returnTo(), restore(), resurrect(), onBackPressed()]
concept: [WandOfLightning] with properties: [affected, points, nPoints] and behaviors: [onZap(int), hit(Char, int), fx(int, Callback), desc()]
concept: [Undead] with properties: [MAX_ARMY_SIZE, nextPedestal, PEDESTAL, RESISTANCES, IMMUNITIES, count, IMMUNITIES] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), damageRoll(), attackSkill(Char), dr(), defenseVerb(), getCloser(int), canAttack(Char), canTryToSummon(), attack(Char), die(Object), maxArmySize(), summon(), notice(), description(), resistances(), immunities(), onAdd(), onRemove(), damageRoll(), attackSkill(Char), attackProc(Char, int), damage(int, Object), die(Object), dr(), defenseVerb(), description(), immunities()]
concept: [NinePatch] with properties: [texture, vertices, verticesBuffer, outterF, innerF, marginLeft, marginRight, marginTop, marginBottom, nWidth, nHeight] and behaviors: [updateVertices(), marginLeft(), marginRight(), marginTop(), marginBottom(), marginHor(), marginVer(), innerWidth(), innerHeight(), innerRight(), innerBottom(), size(float, float), draw()]
concept: [Flare] with properties: [duration, lifespan, lightMode, texture, vertices, indices, nRays] and behaviors: [color(int, boolean), show(Visual, float), update(), draw(), drawRays()]
concept: [DarkGold] with behaviors: [isUpgradable(), isIdentified(), info(), price()]
concept: [Knuckles] with behaviors: [desc()]
concept: [Rat] with behaviors: [damageRoll(), attackSkill(Char), dr(), die(Object), description()]
concept: [ItemButton] with properties: [COLS, SLOT_SIZE, SLOT_MARGIN, TAB_WIDTH, TITLE_HEIGHT, ROWS, listener, mode, title, count, col, row, lastMode, lastBag, icon, bag, NORMAL, EQUIPPED, item, bg] and behaviors: [lastBag(Listener, Mode, String), seedPouch(Listener, Mode, String), placeItems(Bag), placeItem(Item), onMenuPressed(), onBackPressed(), onClick(Tab), tabHeight(), select(boolean), layout(), icon(), isIdentified(), isEquipped(Hero), createChildren(), layout(), item(Item), onTouchDown(), onTouchUp(), onClick(), onLongClick(), createChildren(), onClick(), layout(), item(Item), update(), createControls(), select(boolean), statSlot(Group, String, String, float), addItem(Item), createChildren(), layout(), onTouchDown(), onTouchUp(), onClick()]
concept: [WandOfPoison] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [NoosaScript] with properties: [uCamera, uModel, uTex, uColorM, uColorA, aXY, aUV, lastCamera, SHADER] and behaviors: [use(), drawElements(FloatBuffer, ShortBuffer, int), drawQuad(FloatBuffer), drawQuadSet(FloatBuffer, int), lighting(float, float, float, float, float, float, float, float), resetCamera(), camera(Camera), get(), shader()]
concept: [BannerSprites] with behaviors: [get(Type)]
concept: [RatSkull] with behaviors: [isUpgradable(), isIdentified(), info(), price()]
concept: [InventoryScroll] with properties: [inventoryTitle, mode, TXT_WARNING, TXT_YES, TXT_NO, identifiedByUse, itemSelector] and behaviors: [doRead(), confirmCancelation(), onItemSelected(Item)]
concept: [Sparkle] with properties: [pos, delay] and behaviors: [tilesTex(), waterTex(), water(), grass(), assignRoomType(), decorate(), tileName(int), tileDesc(int), addVisuals(Scene), addVisuals(Level, Scene), update(), reset(float, float), update()]
concept: [Flame] with properties: [BLIGHT, FLIGHT, FLAME1, FLAME2, COLOR, bLight, fLight, emitter, sparks, LIFESPAN, SPEED, ACC, timeLeft] and behaviors: [createChildren(), layout(), update(), draw(), reset(), update()]
concept: [SeedPouch] with behaviors: [grab(Item), price(), info()]
concept: [Tengu] with properties: [JUMP_DELAY, timeToJump, RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), die(Object), getCloser(int), canAttack(Char), doAttack(Char), jump(), notice(), description(), resistances()]
concept: [HighGrass] with behaviors: [trample(Level, int, Char)]
concept: [Graph] with behaviors: [setPrice(List, int), buildDistanceMap(Collection, Node), buildPath(Collection, T, T)]
concept: [HtmlLauncher] with behaviors: [getConfig(), getApplicationListener()]
concept: [SeniorSprite] with properties: [kick] and behaviors: [attack(int), onComplete(Animation)]
concept: [Regrowth] with behaviors: [evolve(), use(BlobEmitter)]
concept: [ParalyticGas] with behaviors: [evolve(), use(BlobEmitter), tileDesc()]
concept: [Level] with properties: [WIDTH, HEIGHT, LENGTH, NEIGHBOURS4, NEIGHBOURS8, NEIGHBOURS9, TIME_TO_RESPAWN, TXT_HIDDEN_PLATE_CLICKS, resizingNeeded, loadedMapSize, map, visited, mapped, viewDistance, fieldOfView, passable, losBlocking, flamable, secret, solid, avoid, water, pit, discoverable, feeling, entrance, exit, mobs, heaps, blobs, plants, itemsToSpawn, color1, color2, pitRoomNeeded, weakFloorCreated, MAP, VISITED, MAPPED, ENTRANCE, EXIT, HEAPS, PLANTS, MOBS, BLOBS] and behaviors: [create(), reset(), restoreFromBundle(Bundle), storeInBundle(Bundle), tunnelTile(), adjustMapSize(), adjustPos(int), tilesTex(), waterTex(), build(), decorate(), createMobs(), createItems(), addVisuals(Scene), nMobs(), respawner(), randomRespawnCell(), randomDestination(), addItemToSpawn(Item), itemToSpanAsPrize(), buildFlagMaps(), cleanWalls(), set(int, int), drop(Item, int), plant(Plant, int), uproot(int), pitCell(), press(int, Char), mobPress(Mob), updateFieldOfView(Char), distance(int, int), adjacent(int, int), tileName(int), tileDesc(int)]
concept: [Atlas] with properties: [tx, namedFrames, uvLeft, uvTop, uvWidth, uvHeight, cols] and behaviors: [add(Object, int, int, int, int), add(Object, RectF), grid(int), grid(int, int), grid(int, int, int, int, int), get(int), get(Object), width(RectF), height(RectF), uvRect(SmartTexture, int, int, int, int)]
concept: [MindVision] with properties: [DURATION, distance] and behaviors: [icon(), toString(), detach()]
concept: [ScrollOfRecharging] with behaviors: [doRead(), desc(), charge(Hero), price()]
concept: [Accuracy] with behaviors: [buff(), desc()]
concept: [Delayer] with behaviors: [updateValues(float)]
concept: [Glaive] with behaviors: [desc()]
concept: [Obstacles] with properties: [MAX_DISTANCE, WIDTH, HEIGHT, distance, limits, losBlocking, fieldOfView, rounding, obs, SIZE, a1, a2, length, limit] and behaviors: [castShadow(int, int, boolean, int), scanSector(int, int, int, int, int, int), reset(), add(float, float), isBlocked(float), nextRow()]
concept: [Wraith] with properties: [SPAWN_DELAY, level, LEVEL, IMMUNITIES] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), damageRoll(), attackSkill(Char), adjustStats(int), defenseVerb(), reset(), description(), spawnAround(int), spawnAt(int), immunities()]
concept: [Ballistica] with properties: [trace, distance] and behaviors: [cast(int, int, boolean, boolean)]
concept: [GameScene] with properties: [TXT_WELCOME, TXT_WELCOME_BACK, TXT_NIGHT_MODE, TXT_CHASM, TXT_WATER, TXT_GRASS, TXT_SECRETS, scene, water, tiles, fog, hero, log, busy, cellSelector, terrain, ripples, plants, heaps, mobs, emitters, effects, gases, spells, statuses, emoicons, toolbar, prompt, defaultCellListener] and behaviors: [create(), destroy(), pause(), update(), onBackPressed(), onMenuPressed(), brightness(boolean), addHeapSprite(Heap), addDiscardedSprite(Heap), addPlantSprite(Plant), addBlobSprite(Blob), addMobSprite(Mob), prompt(String), showBanner(Banner), add(Plant), add(Blob), add(Heap), discard(Heap), add(Mob), add(Mob, float), add(EmoIcon), effect(Visual), ripple(int), spellSprite(), emitter(), status(), pickUp(Item), updateMap(), updateMap(int), discoverTile(int, int), show(Window), afterObserve(), flash(int), gameOver(), bossSlain(), handleCell(int), selectCell(CellSelector), cancelCellSelector(), selectItem(WndBag, WndBag, String), cancel(), ready(), examineCell(Integer)]
concept: [ScrollOfWeaponUpgrade] with properties: [TXT_LOOKS_BETTER] and behaviors: [onItemSelected(Item), desc()]
concept: [WndSettings] with properties: [TXT_ZOOM_IN, TXT_ZOOM_OUT, TXT_ZOOM_DEFAULT, TXT_SCALE_UP, TXT_MUSIC, TXT_SOUND, TXT_BRIGHTNESS, TXT_SWITCH_PORT, TXT_SWITCH_LAND, TXT_SWITCH_FULL, TXT_SWITCH_WIN, WIDTH, BTN_HEIGHT, GAP, btnZoomOut, btnZoomIn] and behaviors: [zoom(float), updateEnabled(), orientationText(), resolutionText()]
concept: [ShadowParticle] with properties: [MISSILE, CURSE, UP] and behaviors: [reset(float, float), resetCurse(float, float), resetUp(float, float), update()]
concept: [AttackIndicator] with properties: [ENABLED, DISABLED, instance, sprite, lastTarget, candidates, enabled] and behaviors: [createChildren(), layout(), update(), checkEnemies(), updateImage(), enable(boolean), visible(boolean), onClick(), target(Char), updateState()]
concept: [FrozenCarpaccio] with behaviors: [execute(Hero, String), info(), price(), cook(MysteryMeat)]
concept: [Golem] with properties: [RESISTANCES, IMMUNITIES] and behaviors: [damageRoll(), attackSkill(Char), attackDelay(), dr(), defenseVerb(), die(Object), description(), resistances(), immunities()]
concept: [MissileSprite] with properties: [SPEED, callback] and behaviors: [reset(int, int, Item, Callback), reset(int, int, int, Glowing, Callback), onComplete(Tweener)]
concept: [DeadEndLevel] with properties: [SIZE] and behaviors: [tilesTex(), waterTex(), build(), decorate(), createMobs(), createItems(), randomRespawnCell()]
concept: [Quarterstaff] with behaviors: [desc()]
concept: [BuffIndicator] with properties: [NONE, MIND_VISION, LEVITATION, FIRE, POISON, PARALYSIS, HUNGER, STARVATION, SLOW, OOZE, AMOK, TERROR, ROOTS, INVISIBLE, SHADOWS, WEAKNESS, FROST, BLINDNESS, COMBO, FURY, HEALING, ARMOR, HEART, LIGHT, CRIPPLE, BARKSKIN, IMMUNITY, BLEEDING, MARK, DEFERRED, SIZE, heroInstance, texture, film, icons, ch] and behaviors: [destroy(), createChildren(), layout(), refreshHero()]
concept: [DangerIndicator] with properties: [COLOR, number, icon, enemyIndex, lastNumber] and behaviors: [createChildren(), layout(), placeNumber(), update(), onClick()]
concept: [ScrollOfTerror] with behaviors: [doRead(), desc(), price()]
concept: [HeroSprite] with properties: [FRAME_WIDTH, FRAME_HEIGHT, RUN_FRAMERATE, tiers, fly] and behaviors: [updateArmor(), place(int), move(int, int), update(), sprint(boolean), tiers(), avatar(HeroClass, int)]
concept: [MirrorSprite] with properties: [FRAME_WIDTH, FRAME_HEIGHT] and behaviors: [link(Char), updateArmor(int)]
concept: [WandOfTeleportation] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [PlateArmor] with behaviors: [desc()]
concept: [Statue] with properties: [weapon, WEAPON, RESISTANCES, IMMUNITIES] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), act(), damageRoll(), attackSkill(Char), attackDelay(), dr(), damage(int, Object), attackProc(Char, int), beckon(int), die(Object), destroy(), reset(), description(), resistances(), immunities()]
concept: [Piranha] with properties: [IMMUNITIES] and behaviors: [act(), damageRoll(), attackSkill(Char), dr(), die(Object), reset(), getCloser(int), getFurther(int), description(), immunities()]
concept: [Thorns] with behaviors: [buff(), random(), doPickUp(Hero), isUpgradable(), desc()]
concept: [Evasion] with behaviors: [buff(), desc()]
concept: [WandOfMagicMissile] with properties: [AC_DISENCHANT, TXT_SELECT_WAND, TXT_DISENCHANTED, TIME_TO_DISENCHANT, disenchantEquipped, itemSelector] and behaviors: [actions(Hero), onZap(int), execute(Hero, String), isKnown(), setKnown(), initialCharges(), desc()]
concept: [WellWater] with properties: [pos] and behaviors: [restoreFromBundle(Bundle), evolve(), affect(), affectHero(Hero), affectItem(Item), seed(int, int), affectCell(int)]
concept: [Archs] with properties: [SCROLL_SPEED, arcsBg, arcsFg, reversed] and behaviors: [createChildren(), layout(), update()]
concept: [PrefsButton] with properties: [image] and behaviors: [createChildren(), layout(), onTouchDown(), onTouchUp(), onClick()]
concept: [Visual] with properties: [x, y, width, height, scale, origin, matrix, rm, gm, bm, am, ra, ga, ba, aa, speed, acc, angle, angularSpeed] and behaviors: [update(), draw(), updateMatrix(), point(), point(PointF), point(Point), center(), center(PointF), width(), height(), updateMotion(), alpha(float), alpha(), invert(), lightness(float), brightness(float), tint(float, float, float, float), tint(int, float), color(float, float, float), color(int), hardlight(float, float, float), hardlight(int), resetColor(), overlapsPoint(float, float), overlapsScreenPoint(int, int), isVisible()]
concept: [Ripple] with properties: [TIME_TO_FADE, time] and behaviors: [reset(int), update()]
concept: [WandOfDisintegration] with behaviors: [onZap(int), distance(), fx(int, Callback), desc()]
concept: [SimpleButton] with properties: [image] and behaviors: [createChildren(), layout(), onClick()]
concept: [TextureCache] with properties: [all] and behaviors: [createSolid(int), add(Object, SmartTexture), get(Object), clear(), reload(), getBitmap(Object), contains(Object)]
concept: [Badges] with properties: [global, local, saveNeeded, BADGES_FILE, BADGES] and behaviors: [reset(), restore(Bundle), store(Bundle, HashSet), loadLocal(Bundle), saveLocal(Bundle), loadGlobal(), saveGlobal(), validateMonstersSlain(), validateGoldCollected(), validateLevelReached(), validateStrengthAttained(), validateFoodEaten(), validatePotionsCooked(), validatePiranhasKilled(), validateItemLevelAquired(Item), validateAllPotionsIdentified(), validateAllScrollsIdentified(), validateAllRingsIdentified(), validateAllWandsIdentified(), validateAllBagsBought(Item), validateAllItemsIdentified(), validateDeathFromFire(), validateDeathFromPoison(), validateDeathFromGas(), validateDeathFromHunger(), validateDeathFromGlyph(), validateDeathFromFalling(), validateYASD(), validateBossSlain(), validateMastery(), validateMasteryCombo(int), validateRingOfHaggler(), validateRingOfThorns(), validateRare(Mob), validateVictory(), validateNoKilling(), validateGrimWeapon(), validateNightHunter(), validateSupporter(), validateGamesPlayed(), validateHappyEnd(), displayBadge(Badge), isUnlocked(Badge), disown(Badge), filtered(boolean), leaveBest(HashSet, Badge)]
concept: [DeathRay] with properties: [A, DURATION, timeLeft] and behaviors: [update(), draw()]
concept: [CorpseDust] with behaviors: [isUpgradable(), isIdentified(), info()]
concept: [Gradient] with behaviors: [createTexture(int)]
concept: [Scene] with properties: [keyListener] and behaviors: [create(), destroy(), pause(), resume(), update(), camera(), onBackPressed(), onMenuPressed()]
concept: [ToxicGas] with behaviors: [evolve(), use(BlobEmitter), tileDesc(), onDeath()]
concept: [HuntressArmor] with properties: [TXT_NO_ENEMIES, TXT_NOT_HUNTRESS, AC_SPECIAL, targets] and behaviors: [special(), doSpecial(), doEquip(Hero), desc()]
concept: [LibraryPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [EyeSprite] with properties: [attackPos] and behaviors: [attack(int), onComplete(Animation)]
concept: [AlarmTrap] with behaviors: [trigger(int, Char)]
concept: [WandOfSlowness] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [Torch] with properties: [AC_LIGHT, TIME_TO_LIGHT] and behaviors: [actions(Hero), execute(Hero, String), isUpgradable(), isIdentified(), price(), info(), tilesTex(), waterTex(), water(), grass(), assignRoomType(), createMobs(), decorate(), tileName(int), tileDesc(int), addVisuals(Scene), addVisuals(Level, Scene), update()]
concept: [LastLevel] with properties: [SIZE, pedestal] and behaviors: [tilesTex(), waterTex(), build(), decorate(), createMobs(), createItems(), randomRespawnCell(), tileName(int), tileDesc(int), addVisuals(Scene)]
concept: [Compass] with properties: [RAD_2_G, RADIUS, cell, cellCenter, lastScroll] and behaviors: [update()]
concept: [Alert] with properties: [maxSize, timeScale, growing, owner] and behaviors: [update()]
concept: [PotionOfExperience] with behaviors: [apply(Hero), desc(), price()]
concept: [ScaleArmor] with behaviors: [desc()]
concept: [GrassPatch] with properties: [WIDTH, HEIGHT, NSTARS, NCLOUDS, viewport, day, night, texture, verticesBuffer, lastIndex, WIDTH, HEIGHT, WIDTH, HEIGHT, tx, ty, a, angle, forward] and behaviors: [create(), destroy(), onBackPressed(), draw(), update(), jump(), onComplete(Animation), update(), updateMatrix()]
concept: [Satiety] with behaviors: [buff(), desc()]
concept: [WarHammer] with behaviors: [desc()]
concept: [PlantSprite] with properties: [DELAY, state, time, frames, pos] and behaviors: [reset(Plant), reset(int), update(), kill()]
concept: [EarthParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [Shopkeeper] with properties: [itemSelector] and behaviors: [act(), damage(int, Object), add(Buff), flee(), reset(), description(), sell(), interact()]
concept: [Tilemap] with properties: [texture, tileset, data, mapWidth, mapHeight, size, cellW, cellH, vertices, quads, updated] and behaviors: [map(int, int), updateVertices(), draw()]
concept: [CellSelector] with properties: [listener, enabled, dragThreshold, pinching, another, startZoom, startSpan, dragging, lastPos] and behaviors: [onClick(PDInputProcessor), onKeyDown(PDInputProcessor), zoom(float), select(int), onTouchDown(PDInputProcessor), onTouchUp(PDInputProcessor), onMouseScroll(int), onDrag(PDInputProcessor), cancel()]
concept: [TouchController] with properties: [controller, content, minX, minY, maxX, maxY, dragThreshold, dragging, lastPos] and behaviors: [destroy(), scrollTo(float, float), createChildren(), layout(), content(), onClick(float, float), onClick(PDInputProcessor), onDrag(PDInputProcessor), onMouseScroll(int), doScroll(PointF)]
concept: [Dungeon] with properties: [NO_TIPS, TIPS, TXT_DEAD_END, potionOfStrength, scrollsOfUpgrade, arcaneStyli, dewVial, transmutation, hero, level, quickslot, depth, gold, resultDescription, chapters, visible, nightMode, RG_GAME_FILE, RG_DEPTH_FILE, WR_GAME_FILE, WR_DEPTH_FILE, MG_GAME_FILE, MG_DEPTH_FILE, RN_GAME_FILE, RN_DEPTH_FILE, VERSION, HERO, GOLD, DEPTH, QUICKSLOT, LEVEL, POS, SOU, AS, DV, WT, CHAPTERS, QUESTS, BADGES, passable] and behaviors: [init(), newLevel(), resetLevel(), tip(), shopOnLevel(), bossLevel(), bossLevel(int), switchLevel(Level, int), posNeeded(), soeNeeded(), chance(int, int), asNeeded(), gameFile(HeroClass), depthFile(HeroClass), saveGame(String), saveLevel(), saveAll(), loadGame(HeroClass), loadGame(String), loadGame(String, boolean), loadLevel(HeroClass), deleteGame(HeroClass, boolean), gameBundle(String), preview(GamesInProgress, Bundle), fail(String), win(String), observe(), findPath(Char, int, int, boolean, boolean), flee(Char, int, int, boolean, boolean)]
concept: [MirrorImage] with properties: [tier, attack, damage, TIER, ATTACK, DAMAGE] and behaviors: [storeInBundle(Bundle), restoreFromBundle(Bundle), duplicate(Hero), attackSkill(Char), damageRoll(), attackProc(Char, int), chooseEnemy(), description(), sprite(), interact()]
concept: [MonkSprite] with properties: [kick] and behaviors: [attack(int), onComplete(Animation)]
concept: [Warlock] with properties: [TIME_TO_ZAP, TXT_SHADOWBOLT_KILLED, RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), canAttack(Char), doAttack(Char), zap(), onZapComplete(), call(), description(), resistances()]
concept: [PotionOfMindVision] with behaviors: [apply(Hero), desc(), price()]
concept: [PixelCamera] with properties: [MIN_WIDTH, MIN_HEIGHT, defaultZoom, minZoom, maxZoom, landscapeAvailable, uiCamera, font1x, font15x, font2x, font25x, font3x, font, scale, FADE_TIME, light, time] and behaviors: [create(), destroy(), chooseFont(float), createText(float), createText(String, float), createMultiline(float), createMultiline(String, float), align(Camera, float), align(float), align(Visual), fadeIn(), fadeIn(int, boolean), showBadge(Badges), update(), draw(), updateMatrix()]
concept: [ScorpioSprite] with properties: [cellToAttack] and behaviors: [blood(), attack(int), onComplete(Animation)]
concept: [FireParticle] with properties: [pos, delay] and behaviors: [create(), tilesTex(), waterTex(), water(), grass(), decorate(), tileName(int), tileDesc(int), addVisuals(Scene), addVisuals(Level, Scene), update(), draw(), reset(float, float), update()]
concept: [WndGame] with properties: [TXT_SETTINGS, TXT_RANKINGS, TXT_START, TXT_MENU, TXT_EXIT, TXT_RETURN, WIDTH, BTN_HEIGHT, GAP, pos] and behaviors: [addButton(RedButton)]
concept: [ShaftParticle] with properties: [FACTORY, offs] and behaviors: [reset(float, float), update()]
concept: [Terrain] with properties: [CHASM, EMPTY, GRASS, EMPTY_WELL, WALL, DOOR, OPEN_DOOR, ENTRANCE, EXIT, EMBERS, LOCKED_DOOR, PEDESTAL, WALL_DECO, BARRICADE, EMPTY_SP, HIGH_GRASS, EMPTY_DECO, LOCKED_EXIT, UNLOCKED_EXIT, SIGN, WELL, STATUE, STATUE_SP, BOOKSHELF, ALCHEMY, CHASM_FLOOR, CHASM_FLOOR_SP, CHASM_WALL, CHASM_WATER, SECRET_DOOR, TOXIC_TRAP, SECRET_TOXIC_TRAP, FIRE_TRAP, SECRET_FIRE_TRAP, PARALYTIC_TRAP, SECRET_PARALYTIC_TRAP, INACTIVE_TRAP, POISON_TRAP, SECRET_POISON_TRAP, ALARM_TRAP, SECRET_ALARM_TRAP, LIGHTNING_TRAP, SECRET_LIGHTNING_TRAP, GRIPPING_TRAP, SECRET_GRIPPING_TRAP, SUMMONING_TRAP, SECRET_SUMMONING_TRAP, WATER_TILES, WATER, PASSABLE, LOS_BLOCKING, FLAMABLE, SECRET, SOLID, AVOID, LIQUID, PIT, UNSTITCHABLE, flags] and behaviors: [discover(int)]
concept: [TorchHalo] with properties: [target, phase] and behaviors: [update(), draw(), putOut()]
concept: [RottingFistSprite] with properties: [FALL_SPEED] and behaviors: [attack(int), onComplete(Animation)]
concept: [Scorpio] with properties: [RESISTANCES] and behaviors: [damageRoll(), attackSkill(Char), dr(), canAttack(Char), attackProc(Char, int), getCloser(int), dropLoot(), description(), resistances()]
concept: [Shuriken] with behaviors: [desc(), random(), price()]
concept: [WaterParticle] with properties: [pos, rippleDelay, factory] and behaviors: [tilesTex(), waterTex(), water(), grass(), decorate(), createMobs(), createItems(), addVisuals(Scene), addVisuals(Level, Scene), tileName(int), tileDesc(int), update(), reset(float, float)]
concept: [Haggling] with behaviors: [buff(), random(), doPickUp(Hero), isUpgradable(), desc()]
concept: [Bandit] with properties: [item] and behaviors: [steal(Hero), die(Object)]
concept: [FlavourBuff] with behaviors: [act()]
concept: [BitmapFilm] with properties: [bitmap, frames] and behaviors: [add(Object, Rect), get(Object)]
concept: [FlameParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [TextureFilm] with properties: [FULL, texWidth, texHeight, frames] and behaviors: [add(Object, RectF), get(Object), width(RectF), height(RectF)]
concept: [Glowing] with properties: [SIZE, DROP_INTERVAL, film, heap, glowing, phase, glowUp, dropInterval, WHITE, red, green, blue, period] and behaviors: [originToCenter(), link(), link(Heap), revive(), worldToCamera(int), place(int), drop(), drop(int), view(int, Glowing), update(), pick(int, int, int)]
concept: [BattleAxe] with behaviors: [desc()]
concept: [PotionOfHealing] with behaviors: [apply(Hero), heal(Hero), desc(), price()]
concept: [WarlockSprite] with behaviors: [zap(int), onComplete(Animation)]
concept: [Freezing] with behaviors: [affect(int, Fire)]
concept: [WoolParticle] with properties: [FACTORY] and behaviors: [reset(float, float)]
concept: [DM300] with properties: [RESISTANCES, IMMUNITIES] and behaviors: [damageRoll(), attackSkill(Char), dr(), act(), move(int), die(Object), notice(), description(), resistances(), immunities()]
concept: [DesktopLauncher] with behaviors: [main(String)]
concept: [PurpleParticle] with properties: [MISSILE, BURST] and behaviors: [reset(float, float), resetBurst(float, float), update()]
concept: [DiscardedItemSprite] with behaviors: [drop(), update()]
concept: [PoisonParticle] with properties: [MISSILE, SPLASH] and behaviors: [resetMissile(float, float), resetSplash(float, float), update()]
concept: [Camera] with properties: [all, invW2, invH2, main, zoom, x, y, width, height, screenWidth, screenHeight, matrix, scroll, target, shakeMagX, shakeMagY, shakeTime, shakeX, shakeY] and behaviors: [reset(), reset(Camera), add(Camera), remove(Camera), updateAll(), createFullscreen(float), destroy(), zoom(float), zoom(float, float, float), resize(int, int), update(), center(), hitTest(float, float), focusOn(float, float), focusOn(PointF), focusOn(Visual), screenToCamera(int, int), cameraToScreen(float, float), screenWidth(), screenHeight(), updateMatrix(), shake(float, float)]
concept: [SnowParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [Succubus] with properties: [BLINK_DELAY, delay, RESISTANCES, IMMUNITIES] and behaviors: [damageRoll(), attackProc(Char, int), getCloser(int), blink(int), attackSkill(Char), dr(), description(), resistances(), immunities()]
concept: [CameraScrollTweener] with properties: [camera, start, end] and behaviors: [updateValues(float)]
concept: [ScrollOfIdentify] with behaviors: [onItemSelected(Item), desc(), price()]
concept: [Awareness] with properties: [DURATION] and behaviors: [detach()]
concept: [GameMath] with behaviors: [speed(float, float), gate(float, float, float)]
concept: [PiranhaSprite] with behaviors: [onComplete(Animation)]
concept: [ShamanSprite] with properties: [points] and behaviors: [zap(int)]
concept: [EnergyParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [MobSprite] with properties: [FADE_TIME, FALL_TIME] and behaviors: [update(), onComplete(Animation), fall()]
concept: [CavesBossLevel] with properties: [ROOM_LEFT, ROOM_RIGHT, ROOM_TOP, ROOM_BOTTOM, arenaDoor, enteredArena, keyDropped, DOOR, ENTERED, DROPPED] and behaviors: [tilesTex(), waterTex(), storeInBundle(Bundle), restoreFromBundle(Bundle), build(), decorate(), createMobs(), respawner(), createItems(), randomRespawnCell(), press(int, Char), drop(Item, int), outsideEntraceRoom(int), tileName(int), tileDesc(int), addVisuals(Scene)]
concept: [Gizmo] with properties: [exists, alive, active, visible, parent, camera] and behaviors: [destroy(), update(), draw(), kill(), revive(), camera(), isVisible(), isActive(), killAndErase(), remove()]
concept: [RatKingPainter] with behaviors: [paint(Level, Room), addChest(Level, int, int)]
concept: [CheckedCell] with properties: [alpha] and behaviors: [update()]
concept: [WraithSprite] with behaviors: [blood()]
concept: [Halo] with properties: [CACHE_KEY, RADIUS, radius, brightness] and behaviors: [point(float, float), radius(float)]
concept: [CryptPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [PrisonBossLevel] with properties: [anteroom, arenaDoor, enteredArena, keyDropped, ARENA, DOOR, ENTERED, DROPPED] and behaviors: [tilesTex(), waterTex(), storeInBundle(Bundle), restoreFromBundle(Bundle), build(), water(), grass(), paintDoors(Room), placeTraps(), decorate(), createMobs(), respawner(), createItems(), press(int, Char), drop(Item, int), randomRespawnCell(), tileName(int), tileDesc(int), addVisuals(Scene)]
concept: [SewerBossLevel] with properties: [stairs, STAIRS] and behaviors: [tilesTex(), waterTex(), build(), water(), grass(), decorate(), addVisuals(Scene), createMobs(), respawner(), createItems(), seal(), unseal(), storeInBundle(Bundle), restoreFromBundle(Bundle), tileName(int), tileDesc(int)]
concept: [LeafParticle] with properties: [color1, color2, GENERAL, LEVEL_SPECIFIC] and behaviors: [reset(float, float)]
concept: [LastShopLevel] with behaviors: [tilesTex(), waterTex(), build(), decorate(), createMobs(), respawner(), createItems(), randomRespawnCell(), tileName(int), tileDesc(int), water(), grass(), addVisuals(Scene)]
concept: [IOSLauncher] with behaviors: [createApplication(), main(String)]
concept: [BloodParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [GooSprite] with properties: [pump] and behaviors: [pumpUp(), blood()]
concept: [WndOptions] with properties: [WIDTH, MARGIN, BUTTON_HEIGHT] and behaviors: [onSelect(int)]
concept: [DM300Sprite] with behaviors: [onComplete(Animation), blood()]
concept: [HallsBossLevel] with properties: [ROOM_LEFT, ROOM_RIGHT, ROOM_TOP, ROOM_BOTTOM, stairs, enteredArena, keyDropped, STAIRS, ENTERED, DROPPED] and behaviors: [tilesTex(), waterTex(), storeInBundle(Bundle), restoreFromBundle(Bundle), build(), decorate(), createMobs(), respawner(), createItems(), randomRespawnCell(), press(int, Char), doMagic(int), drop(Item, int), tileName(int), tileDesc(int), addVisuals(Scene)]
concept: [ScrollHolder] with behaviors: [grab(Item), price(), info()]
concept: [PseudoPixel] with behaviors: [size(float, float), size(float)]
concept: [ShopkeeperSprite] with properties: [coin] and behaviors: [onComplete(Animation)]
concept: [DungeonTilemap] with properties: [SIZE, instance] and behaviors: [screenToTile(int, int), overlapsPoint(float, float), discover(int, int), tileToWorld(int), tileCenterToWorld(int), tileToPoint(int), pointToTile(Point), tile(int), overlapsScreenPoint(int, int)]
concept: [AcidicSprite] with behaviors: [blood()]
concept: [Herbalism] with behaviors: [buff(), desc()]
concept: [SparkParticle] with properties: [FACTORY] and behaviors: [reset(float, float), update()]
concept: [SystemTime] with properties: [now] and behaviors: [tick()]
concept: [SuccubusSprite] with behaviors: [die()]
concept: [StoragePainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [Regeneration] with properties: [REGENERATION_DELAY] and behaviors: [act()]
concept: [CityBossLevel] with properties: [TOP, HALL_WIDTH, HALL_HEIGHT, CHAMBER_HEIGHT, LEFT, CENTER, arenaDoor, enteredArena, keyDropped, DOOR, ENTERED, DROPPED] and behaviors: [tilesTex(), waterTex(), storeInBundle(Bundle), restoreFromBundle(Bundle), build(), decorate(), pedestal(boolean), createMobs(), respawner(), createItems(), randomRespawnCell(), press(int, Char), drop(Item, int), outsideEntraceRoom(int), tileName(int), tileDesc(int), addVisuals(Scene)]
concept: [WandOfFirebolt] with behaviors: [onZap(int), fx(int, Callback), desc()]
concept: [ScrollOfMirrorImage] with properties: [NIMAGES] and behaviors: [doRead(), desc()]
concept: [RogueArmor] with properties: [TXT_FOV, TXT_NOT_ROGUE, AC_SPECIAL, teleporter] and behaviors: [special(), doSpecial(), doEquip(Hero), desc()]
concept: [LootIndicator] with properties: [slot, lastItem, lastQuantity] and behaviors: [createChildren(), layout(), update()]
concept: [BadgeBanner] with properties: [state, DEFAULT_SCALE, FADE_IN_TIME, STATIC_TIME, FADE_OUT_TIME, index, time, atlas, current] and behaviors: [update(), kill(), highlight(Image, int), show(int), image(int)]
concept: [SkeletonSprite] with behaviors: [die(), blood()]
concept: [SpinnerSprite] with behaviors: [blood()]
concept: [GolemSprite] with behaviors: [blood(), onComplete(Animation)]
concept: [OverpricedRation] with behaviors: [info(), price()]
concept: [YogSprite] with behaviors: [die()]
concept: [ArmoryPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [BusyIndicator] with behaviors: [update()]
concept: [GardenPainter] with behaviors: [paint(Level, Room)]
concept: [TrapsPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [Foliage] with behaviors: [evolve(), use(BlobEmitter), tileDesc()]
concept: [FogTexture] with properties: [VISIBLE, VISITED, MAPPED, INVISIBLE, pixels, pWidth, pHeight, width2, height2] and behaviors: [updateVisibility(boolean, boolean, boolean), reload()]
concept: [VaultPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [PoolPainter] with properties: [NPIRANHAS] and behaviors: [paint(Level, Room), prize(Level)]
concept: [SmokeParticle] with properties: [pos, factory] and behaviors: [tilesTex(), waterTex(), water(), grass(), assignRoomType(), decorate(), createItems(), tileName(int), tileDesc(int), addVisuals(Scene), addVisuals(Level, Scene), update(), reset(float, float), update()]
concept: [StatueSprite] with behaviors: [blood()]
concept: [LaboratoryPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [LarvaSprite] with behaviors: [blood(), die()]
concept: [GhostSprite] with behaviors: [draw(), die(), blood()]
concept: [CrabSprite] with behaviors: [blood()]
concept: [AndroidLauncher] with behaviors: [onCreate(Bundle)]
concept: [SwarmSprite] with behaviors: [blood()]
concept: [PitPainter] with behaviors: [paint(Level, Room), prize(Level)]
concept: [UndeadSprite] with behaviors: [die(), blood()]
concept: [MagicWellPainter] with properties: [WATERS] and behaviors: [paint(Level, Room)]
concept: [TreasuryPainter] with behaviors: [paint(Level, Room)]
concept: [BlacksmithPainter] with behaviors: [paint(Level, Room)]
concept: [WeakFloorPainter] with behaviors: [paint(Level, Room)]
concept: [TunnelPainter] with behaviors: [paint(Level, Room)]
concept: [EntrancePainter] with behaviors: [paint(Level, Room)]
concept: [StatuePainter] with behaviors: [paint(Level, Room)]
concept: [BossExitPainter] with behaviors: [paint(Level, Room)]
concept: [ExitPainter] with behaviors: [paint(Level, Room)]
